import numpy as np

def sigm(x, deriv=False):
    if(deriv==True):
        return x*(1-x)
    return 1/(1+np.exp(-x))

x=np.array(([0,0,1],[0,1,1], [1,0,1], [1,1,1]))
y=np.array([[0,0,1,1]]).T

weights = 2*np.random.random((3,1)) - 1


for i in np.arange(10000):
    i0=x
    i1 = sigm(np.dot(i0,weights))
    
    i1error = y-i1
    
    i1delta = i1error*sigm(i1,True)
    
    weights += np.dot(i0.T, i1delta)

print(i1)
